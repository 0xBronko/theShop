[{"/Users/Bronko/Desktop/capstone/theShop/src/index.js":"1","/Users/Bronko/Desktop/capstone/theShop/src/reportWebVitals.js":"2","/Users/Bronko/Desktop/capstone/theShop/src/App.jsx":"3","/Users/Bronko/Desktop/capstone/theShop/src/components/directory/directory.component.jsx":"4","/Users/Bronko/Desktop/capstone/theShop/src/components/category-item/category-item.component.jsx":"5","/Users/Bronko/Desktop/capstone/theShop/src/routes/home/home.routes.jsx":"6","/Users/Bronko/Desktop/capstone/theShop/src/routes/navigation/navigation.routes.jsx":"7","/Users/Bronko/Desktop/capstone/theShop/src/utils/firebase/firebase.utils.js":"8","/Users/Bronko/Desktop/capstone/theShop/src/components/form-input/form-input.component.jsx":"9","/Users/Bronko/Desktop/capstone/theShop/src/components/button/button.component.jsx":"10","/Users/Bronko/Desktop/capstone/theShop/src/routes/authentication/authentication.component.jsx":"11","/Users/Bronko/Desktop/capstone/theShop/src/components/sign-up/sign-up.component.jsx":"12","/Users/Bronko/Desktop/capstone/theShop/src/components/log-in/log-in-form.component.jsx":"13","/Users/Bronko/Desktop/capstone/theShop/src/context/user.context.jsx":"14","/Users/Bronko/Desktop/capstone/theShop/src/routes/shop/shop.component.jsx":"15","/Users/Bronko/Desktop/capstone/theShop/src/context/products.context.jsx":"16","/Users/Bronko/Desktop/capstone/theShop/src/components/product-card/product-card.component.jsx":"17","/Users/Bronko/Desktop/capstone/theShop/src/components/cart-icon/cart-icon.component.jsx":"18","/Users/Bronko/Desktop/capstone/theShop/src/components/cart-dropdown/cart-dropdown.component.jsx":"19","/Users/Bronko/Desktop/capstone/theShop/src/context/cart.context.jsx":"20"},{"size":1134,"mtime":1649138793429,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1648732748779,"results":"23","hashOfConfig":"22"},{"size":675,"mtime":1649134048699,"results":"24","hashOfConfig":"22"},{"size":409,"mtime":1648787948159,"results":"25","hashOfConfig":"22"},{"size":557,"mtime":1648787563926,"results":"26","hashOfConfig":"22"},{"size":898,"mtime":1648794585325,"results":"27","hashOfConfig":"22"},{"size":2273,"mtime":1649140981797,"results":"28","hashOfConfig":"22"},{"size":6765,"mtime":1649134110484,"results":"29","hashOfConfig":"22"},{"size":655,"mtime":1648910968512,"results":"30","hashOfConfig":"22"},{"size":808,"mtime":1648917127443,"results":"31","hashOfConfig":"22"},{"size":777,"mtime":1649044306750,"results":"32","hashOfConfig":"22"},{"size":4419,"mtime":1649132020151,"results":"33","hashOfConfig":"22"},{"size":2735,"mtime":1649132353480,"results":"34","hashOfConfig":"22"},{"size":1341,"mtime":1649134079386,"results":"35","hashOfConfig":"22"},{"size":535,"mtime":1649135874113,"results":"36","hashOfConfig":"22"},{"size":435,"mtime":1649135135115,"results":"37","hashOfConfig":"22"},{"size":858,"mtime":1649140399019,"results":"38","hashOfConfig":"22"},{"size":612,"mtime":1649141150438,"results":"39","hashOfConfig":"22"},{"size":496,"mtime":1649140382946,"results":"40","hashOfConfig":"22"},{"size":673,"mtime":1649140476450,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},"1nnctyk",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"46"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"46"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"46"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/Bronko/Desktop/capstone/theShop/src/index.js",["113"],[],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\n\n\nimport ReactDOMClient from \"react-dom/client\";\nimport { UserProvider } from './context/user.context';\nimport { PrductsProvider } from './context/products.context';\nimport { CartProvider } from './context/cart.context';\n\nconst root = ReactDOMClient.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <UserProvider>\n        <PrductsProvider>\n          <CartProvider>\n            <App /> \n          </CartProvider>\n        </PrductsProvider>\n      </UserProvider>\n    </BrowserRouter>\n  </React.StrictMode>\n)\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["114","115"],"/Users/Bronko/Desktop/capstone/theShop/src/reportWebVitals.js",[],[],["116","117"],"/Users/Bronko/Desktop/capstone/theShop/src/App.jsx",[],[],"/Users/Bronko/Desktop/capstone/theShop/src/components/directory/directory.component.jsx",[],[],"/Users/Bronko/Desktop/capstone/theShop/src/components/category-item/category-item.component.jsx",[],[],"/Users/Bronko/Desktop/capstone/theShop/src/routes/home/home.routes.jsx",[],[],"/Users/Bronko/Desktop/capstone/theShop/src/routes/navigation/navigation.routes.jsx",["118","119"],[],"import { signOut } from \"firebase/auth\";\nimport React, { useContext } from \"react\";\nimport { Link, Outlet } from \"react-router-dom\";\nimport { ReactComponent as CrwnLogo } from \"../../assets/crown.svg\"\nimport CartDropdown from \"../../components/cart-dropdown/cart-dropdown.component\";\nimport CartIcon from \"../../components/cart-icon/cart-icon.component\";\nimport { CartContext } from \"../../context/cart.context\";\n\nimport { UserContext } from \"../../context/user.context\"\n\nimport { signOutUser } from \"../../utils/firebase/firebase.utils\"\n\nimport \"./navigation.styles.scss\";\n\nconst Navigation = () => {\n    const { currentUser, setCurrentUser } = useContext(UserContext);    // hier extrahieren wir den aktuellen User aus dem context\n    // console.log(currentUser);                           // immer, wenn sich der user state nun Ã¤ndert, wird auch diese component gerendert\n\n    // const signOutHandler = async () => {\n    //     await signOutUser();\n    //     setCurrentUser(null); // damit ist der currentUser wieder im context auf null gesetzt\n    // }\n\n    const {isCartOpen} = useContext(CartContext);\n\n    return (\n        <>\n            <div className=\"navigation\">\n\n                <Link className=\"logo-container\" to=\"/\">\n                    <CrwnLogo />\n                </Link>\n\n                <div className=\"nav-links-container\">\n                    <Link className=\"nav-link\" to=\"/shop\">SHOP</Link>\n                    {\n                        currentUser ? (<span className=\"nav-link\" onClick={signOutUser}>SIGN OUT</span>)\n                            : (<Link className=\"nav-link\" to=\"/auth\">SIGN IN</Link>)\n                    }\n                <CartIcon />\n                </div>\n                {isCartOpen && <CartDropdown />} {/* logik, wenn is cart open true, render cartdropdown */}\n            </div>\n            <Outlet />\n        </>\n    )\n}\n\nexport default Navigation;\n\n\n// jsx mit current user = when there is a current user -> use a different link, when current user does not exists, render\n// the sign in link\n\n// SignOut= wenn man hier einfach nur die signOut Methode importiert und ausfÃ¼hrt, muss man den status auch an den context Ã¼bergeben,\n// damit er immer weiÃ ob user gerade eingeloggt ist oder nicht --> deswegen signouthandler","/Users/Bronko/Desktop/capstone/theShop/src/utils/firebase/firebase.utils.js",["120","121"],[],"import { initializeApp } from \"firebase/app\"; // um die app Instanz zu starten\n\n//importiere die authentification library von firebase --- wird fÃ¼r das google sign in benÃ¶tigt (entweder per popup oder redirect)\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\"\n\nimport {\n    getFirestore,   // firestore instanz starten\n    doc,            // Zugriff auf document type in firebase (user)\n    getDoc,         // get document data in firebase (for each user)\n    setDoc          // set document data in firebase (for each user)\n} from \"firebase/firestore\";\n\n// Your web app's Firebase configuration von der Firebase Webseite. Das sind die Konfiguaraionsdaten zu diese speziellen Projekt\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDiOjfAzd3SJXJvyGP2rhEb3oLWgC8Z94o\",\n    authDomain: \"test-shop-6668c.firebaseapp.com\",\n    projectId: \"test-shop-6668c\",\n    storageBucket: \"test-shop-6668c.appspot.com\",\n    messagingSenderId: \"634615670222\",\n    appId: \"1:634615670222:web:29da64eb32dc34fef4379f\"\n  };\n  \n  // Initialize Firebase // SDK (Developer Kit)\nconst firebaseApp = initializeApp(firebaseConfig);\n\n  // initialzie a provider / provider ist also immer eine neue Instanz von googleauthprovider (hat constructor und benotigt Argumente)\n  // googleAuthProvider ist eine Klasse, die connected mit googleAuth ist. Deswegen new Keyword fÃ¼r neue Instanz\n  // Und manchmal mÃ¼ssen wir mehrer verschiedene Provider erstellen, um verschiedene Daten zu bearbeiteten\n  // man kÃ¶nnte zum Beispiel fÃ¼r signInWithRedirect einen anderen Provider mitgeben\nconst provider = new GoogleAuthProvider();\n  // dann geben wir diesem Provider noch spezielle Instruktionen, wie er vorgehen soll / Ich denke mal, jeder User der dann den Provider nutzt, interagiert mit dieser Ã¼berarbeiteteten\n  // Version, da diese erst initialisiert wurde, jetzt angepasst und spÃ¤ter aufgerufen wird\nprovider.setCustomParameters({          \n    prompt: \"select_account\"             // jedes Mal, wenn jemand mit dem Provider interagiert, soll er jedes mal seinen account auswÃ¤hlen mÃ¼ssen\n});                                     // Google will diese Einstellung/ Vorgehen und man muss es einfach wissen, dass man es so einstellen muss\n\n\n\n// diese authentification wird woanders eingebunden\n// Authentification Prozess ist immer gleich. Das ist keine Klasse, von der Unterschiedliche Objekte erstellt werden mÃ¼ssen\n// deswegen kein new Keyword\nexport const auth = getAuth();\n\n// ebenso mÃ¼ssen wir die Signin Logik woanders einbinden (button in SignIn Sektion) und als Parameter bekommt er einmal die authentification und den Provider\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\n\n\n// Man braucht immer nur eine Authentification, egal fÃ¼r welchen Vorgang aber man kÃ¶nnte verschiedene Provider Konfiguraitionen fÃ¼r verschiedene Services benÃ¶tigen\n    // (   Deswegen bei getAuth() kein new keyword und bei    new GoogleAuthProvider() mit new Keyword   )\n\n\n\n// ab hier werden die Daten dann angelegt bzw in firestore gespeichert\n\nexport const db = getFirestore()    // die hier geschaffene Instanz gibt uns 1mal acces zur Database jedes mal um etwas zu Ã¤ndern?\n\n\n// hier wollen wir die Daten, die wir von dem authentification service aus signIn Component zurÃ¼ckerhalten(nach sign in) Ã¼bergeben\n// und dann inside firestore speichern\nexport  const createUserDocumentFromAuth = async (userAuth, additionalInformation = {}) => {\n    // in additional information wird wegen unten genannt, der displayname Ã¼bergeben {displayName: \"mike\"}\n\n    // prÃ¼fen, ob eine bestiimte Instanz vom document user bereits existiert (Referenz)\n    // die Methode doc() nimmt drei argumente:\n        // die Datenbank, die aufgerufen werden soll(firestore)\n        // wie die entsprechende collection heiÃt (der folder) hier: users\n        // der Unique identifier fÃ¼r den entsprechenden user (das document) -> hier Ã¼bergeben wir aus dem auth service die \"uid\"\n    const userDocRef = doc(db, \"users\", userAuth.uid)\n    // console.log(userDocRef)\n    // Bis hier hin, wird nach user login vom shop ein \"leerer\" Befehl mit user/userId an die Datenbank geschickt, weil noch nicht \n    // definiert wurde, wie die Daten verarbeitet werden sollen/ bzw. welche Daten abgefragt und gespeichert werden\n\n    // mit getDoc versucht man die Daten zu einem Document zu erfassen. Also Ã¼bergeben wir dem die user data von firestore, vom user der sich gerade authentifiziert hat\n    // snapshot ist quasi die Dateien und ist auch ein SPEZIELLES OBJEKT\n    const userSnapshot = await getDoc(userDocRef);\n    // console.log(userSnapshot);\n    // console.log(userSnapshot.exists()) // false, weil in meiner firestore database noch kein Eintrag zu diesem user vorhanden ist\n\n\n    // now check if user Data exists\n    // create/ set the document with the data from userAuth in my collection\n    if(!userSnapshot.exists()) {\n        const { displayName, email } = userAuth;    // relevanten Daten aus der userAut response\n        const createdAt = new Date();               // aktuelles Datum erfassen\n        \n        try {\n            await setDoc(userDocRef, {              // Daten in das Document auf firestore eintragen und dabei Folgende Konfigs beachten\n                displayName,\n                email,\n                createdAt,\n                ...additionalInformation            // display name wird bisher nicht angezeigt, da google auth das keyword selbst belegt. daher wird dann der name in diesen additional information gespeichert\n            });\n        } catch (error) {\n            console.log(\"error creating the user\", error);\n        }\n    }\n    return userDocRef;\n}\n\n// INTERFACE LAYER FUNCTIONS\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n    if (!email || !password) return;        // wenn weder email oder passwort agegeben ist, soll diese Funktion nicht ausgefÃ¼hrt werden (protect code)\n\n    return await createUserWithEmailAndPassword(auth, email, password);\n}\n\n// Diese Helper Funktion ist fÃ¼r das log in \nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n    if (!email || !password) return;        // wenn weder email oder passwort agegeben ist, soll diese Funktion nicht ausgefÃ¼hrt werden (protect code)\n\n    return await signInWithEmailAndPassword(auth, email, password);\n}\n\nexport const signOutUser = async () =>  signOut(auth);\n// async weil wir abwarten wollen, was signOut fÃ¼r ein promise returned\n\n\n// a callback everytime i want to call when auth state changes\nexport const onAuthStateChangedListener = (callback) => onAuthStateChanged(auth, callback);","/Users/Bronko/Desktop/capstone/theShop/src/components/form-input/form-input.component.jsx",[],[],"/Users/Bronko/Desktop/capstone/theShop/src/components/button/button.component.jsx",[],[],"/Users/Bronko/Desktop/capstone/theShop/src/routes/authentication/authentication.component.jsx",[],[],"/Users/Bronko/Desktop/capstone/theShop/src/components/sign-up/sign-up.component.jsx",["122"],[],"import React, { useContext, useState } from \"react\";\n\nimport { createAuthUserWithEmailAndPassword, createUserDocumentFromAuth } from \"../../utils/firebase/firebase.utils\";\nimport Button from \"../button/button.component\";\nimport FormInput from \"../form-input/form-input.component\";\n// import { UserContext } from \"../../context/user.context\"\n\nimport \"./sign-up-form.styles.scss\";\n\n\nconst defaultFormFields = {\n    displayName: \"\", \n    mail: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n};\n\n\nconst SignInForm = () => {\n    const [formFields, setFormFields] = useState(defaultFormFields);\n    const { displayName, mail, password, confirmPassword} = formFields;  // damit wir die in den input feldern direkt targetieren kÃ¶nnen\n                                                                         // hierduch wird der state aber nichtgeÃ¤ndert, sondern nur entsprehcnend targetiert. geÃ¤ndert erst unter setFormFields\n\n    // console.log(formFields)\n\n    // const { setCurrentUser } = useContext(UserContext)\n\n    const resetFormFields = () => {\n        setFormFields(defaultFormFields);\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        console.log(\"geklappt\")        \n        if(password !== confirmPassword) {\n            alert(\"PasswÃ¶rter passen nicht zusammen\");\n            return;\n        }\n\n        // try and catch weil we call den firebase server und das kann natÃ¼rlich fehlschlagen\n        try {\n            const {user} = await createAuthUserWithEmailAndPassword(mail, password); //destructured von formFields\n\n            // setCurrentUser(user); // wenn ein user sich jetzt fÃ¼r das erste mal registriert, ist der user auch im context gespeichert\n\n            await createUserDocumentFromAuth(user, {displayName}); // erst hiermit wird der user wirklich in die Datenbank gepushed. Vorher immer nur im auth zu sehen\n            resetFormFields();\n        } catch(error) {\n            if(error.code === \"auth/email-already-in-use\") {\n                alert(\"die mail hast du bereits genutzt junge...\");\n            }\n            console.log(\"fehler beim erstellen des users\" ,error);\n        };\n\n    }\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        console.log(name)\n\n        setFormFields({                     \n            ...formFields,                  // alle nicht geÃ¤nderten Felder bleiben so, wie sie aktuell sind mit ...formFields\n            [name]: value                   // Computed Property Names --> [name]: holt sich den namen des aktuell triggernden InputFeldes -- Dynamic Keys\n        })                                  // value ist der aktuelle wert des entsprechenden Inputfelds (mail: \"wert, der gerade ins mail feld eingetragen wird\")\n    }                                                                  \n\n    return (\n        <div className=\"sign-up-container\">\n            <h2>Don't have an account?</h2>\n             <span>Registriere dich mit deiner Email und Passwort an</span>\n            <form onSubmit={handleSubmit}>\n                <FormInput label={\"Display Name\"} required type=\"text\" name=\"displayName\" onChange={handleChange} value={displayName} />\n                <FormInput label={\"E-Mail\"} required type=\"mail\" name=\"mail\" onChange={handleChange} value={mail} />\n                <FormInput label={\"Passwort\"} required type=\"password\" name=\"password\" onChange={handleChange} value={password} />\n                <FormInput label={\"Passwort bestÃ¤tigen\"} required type=\"password\" name=\"confirmPassword\" onChange={handleChange} value={confirmPassword} />\n\n                {/* <label htmlFor=\"displayName\">Display Name</label>\n                <input required type=\"text\" name=\"displayName\" onChange={handleChange} value={displayName} />\n\n                <label htmlFor=\"mail\">E-Mail</label>\n                <input required type=\"email\" name=\"mail\" onChange={handleChange} value={mail} />\n\n                <label htmlFor=\"password\">Passwort</label>\n                <input required type=\"password\" name=\"password\" onChange={handleChange} value={password} />\n\n                <label htmlFor=\"confirmPassword\">Passwort</label>\n                <input required type=\"password\" name=\"confirmPassword\" onChange={handleChange} value={confirmPassword} /> */}\n                <Button type=\"submit\" >Abschicken</Button>\n            </form>\n        </div>\n    )\n}\n\nexport default SignInForm;","/Users/Bronko/Desktop/capstone/theShop/src/components/log-in/log-in-form.component.jsx",["123","124","125"],[],"import React, { useState, useContext } from \"react\";\n\nimport { signInWithGooglePopup, createUserDocumentFromAuth, signInAuthUserWithEmailAndPassword } from \"../../utils/firebase/firebase.utils\";\nimport Button from \"../button/button.component\";\nimport FormInput from \"../form-input/form-input.component\";\n\n// import { UserContext } from \"../../context/user.context\"\n\nimport \"./log-in-form.styles.scss\";\n\n\nconst defaultFormFields = {\n    mail: \"\",\n    password: \"\"\n};\n\n\n\nconst LogInForm = () => {\n    const [formFields, setFormFields] = useState(defaultFormFields);\n    const { mail, password } = formFields;  \n\n    // const { setCurrentUser } = useContext(UserContext); // hier wird aus use context die setCurrentUser funktion extrahiert \n\n    const resetFormFields = () => {\n        setFormFields(defaultFormFields);\n    };\n\n    const signInWithGoogle = async () => {\n        await signInWithGooglePopup();   // hier die user daten aus der response destructuren\n        \n    };\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n\n        try {\n            const {user} = await signInAuthUserWithEmailAndPassword(mail, password);\n            // console.log(response)\n            // setCurrentUser(user);           // hier wird das useContext set current user aufgerufen, also der user im context wird hier gesetzt\n            resetFormFields()\n        } catch(error) {\n            switch(error.code) {\n                case \"auth/wrong-password\": alert(\"incorrect password or email\"); break;\n                case \"auth/user-not-found\": alert(\"no user associated with this email\"); break;\n                default: console.log(error)\n            }}\n        };\n    \n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormFields({...formFields,[name]: value})                                  \n    }                                       \n    \n    \n\n    return (\n        <div className=\"sign-up-container\">\n            <h2>Already have an account?</h2>\n             <span>Melde dich mit deiner Email und Passwort an</span>\n            <form onSubmit={handleSubmit}>\n               \n                <FormInput label={\"E-Mail\"} required type=\"mail\" name=\"mail\" onChange={handleChange} value={mail} />\n                <FormInput label={\"Passwort\"} required type=\"password\" name=\"password\" onChange={handleChange} value={password} />\n               \n                <div className=\"buttons-container\">\n                    <Button type=\"submit\" >Anmelden</Button>\n                    <Button type=\"button\" buttonType={\"google\"} onClick={signInWithGoogle} >Google Sign In</Button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default LogInForm;","/Users/Bronko/Desktop/capstone/theShop/src/context/user.context.jsx",["126"],[],"import React, {useState, createContext, useEffect } from \"react\";\n\nimport { onAuthStateChangedListener, signOutUser, createUserDocumentFromAuth } from \"../utils/firebase/firebase.utils\"\n\n// the actual value we want to access \n// pass/create the default value\nexport const UserContext = createContext({\n    currentUser: null,\n    setCurrentUser: () => null,\n});\n\n\n// provider is the actual component\n// the provider allows any of its child components to access the state inside of its useState\nexport const UserProvider = ({children}) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const value = { currentUser, setCurrentUser };\n\n    // signOutUser(); // as soon as this userprovider mounts -> sign out\n\n    useEffect(()=> {    // \n        const unsubscribe = onAuthStateChangedListener((user) => {  // receives callback function and passes this callback function as second parameter to onauthstagechange in firebase utils\n            // console.log(user)\n            if(user) {\n                createUserDocumentFromAuth(user);\n            }\n            setCurrentUser(user); // signout = null / wenn signed in ist user = authenticated user objekt\n        })\n        return unsubscribe;\n    }, [])\n\n    return (\n        <UserContext.Provider value={value}> \n            {children}\n        </UserContext.Provider>\n    )\n};","/Users/Bronko/Desktop/capstone/theShop/src/routes/shop/shop.component.jsx",[],[],"/Users/Bronko/Desktop/capstone/theShop/src/context/products.context.jsx",["127"],[],"import React, {createContext, useState} from \"react\";\n\nimport PRODUCTS from \"../shop-data.json\";\n\nexport const ProductsContext = createContext({\n    products: [],\n});\n\nexport const PrductsProvider = ({children}) => {\n    const [products, setProducts] = useState(PRODUCTS);\n    const value = {products};\n\n    return (\n        <ProductsContext.Provider value={value}> \n            {children}\n        </ProductsContext.Provider>\n    )\n}\n\n","/Users/Bronko/Desktop/capstone/theShop/src/components/product-card/product-card.component.jsx",["128","129"],[],"import React, { useContext } from \"react\";\n\nimport \"./product-card.styles.scss\";\nimport Button from \"../button/button.component\"\n\nimport {CartContext} from \"../../context/cart.context\"\n\nconst ProductCard = ({product}) => {\n    const { name, price, imageUrl} = product;\n    const {selectedProducts ,setSelectedProducts} = useContext(CartContext);\n\n    // const addToContextCard = () => {\n    //     // console.log(name)\n    //     setSelectedProducts(name)\n    // }\n\n    return(\n        <div className=\"product-card-container\">\n            <img src={imageUrl} alt={`${name}`} />\n            <div className=\"footer\">\n                <span className=\"name\">{name}</span>\n                <span className=\"price\">{price}</span>\n            </div>\n            <Button buttonType=\"inverted\" >ADD TO CARD</Button>\n        </div>\n    )\n\n}\n\nexport default ProductCard;","/Users/Bronko/Desktop/capstone/theShop/src/components/cart-icon/cart-icon.component.jsx",[],[],"/Users/Bronko/Desktop/capstone/theShop/src/components/cart-dropdown/cart-dropdown.component.jsx",["130","131"],[],"import React, { useContext } from \"react\";\n\nimport \"./cart-dropdown.styles.scss\";\nimport Button from \"../button/button.component\"\n\nimport {CartContext} from \"../../context/cart.context\"\n\nconst CartDropdown = () => {\n\n    // const {selectedProducts} = useContext(CartContext);\n\n    return(\n        <div className=\"cart-dropdown-container\">\n            <div className=\"cart-items\">\n\n            </div>\n            <Button>GO TO CHECKOUT</Button>\n        </div>\n    )\n}\n\nexport default CartDropdown;","/Users/Bronko/Desktop/capstone/theShop/src/context/cart.context.jsx",[],[],{"ruleId":"132","severity":1,"message":"133","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":16},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"136","replacedBy":"140"},{"ruleId":"138","replacedBy":"141"},{"ruleId":"132","severity":1,"message":"142","line":1,"column":10,"nodeType":"134","messageId":"135","endLine":1,"endColumn":17},{"ruleId":"132","severity":1,"message":"143","line":16,"column":26,"nodeType":"134","messageId":"135","endLine":16,"endColumn":40},{"ruleId":"132","severity":1,"message":"144","line":4,"column":19,"nodeType":"134","messageId":"135","endLine":4,"endColumn":37},{"ruleId":"132","severity":1,"message":"145","line":24,"column":7,"nodeType":"134","messageId":"135","endLine":24,"endColumn":18},{"ruleId":"132","severity":1,"message":"146","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":27},{"ruleId":"132","severity":1,"message":"146","line":1,"column":27,"nodeType":"134","messageId":"135","endLine":1,"endColumn":37},{"ruleId":"132","severity":1,"message":"147","line":3,"column":33,"nodeType":"134","messageId":"135","endLine":3,"endColumn":59},{"ruleId":"132","severity":1,"message":"148","line":40,"column":20,"nodeType":"134","messageId":"135","endLine":40,"endColumn":24},{"ruleId":"132","severity":1,"message":"149","line":3,"column":38,"nodeType":"134","messageId":"135","endLine":3,"endColumn":49},{"ruleId":"132","severity":1,"message":"150","line":10,"column":22,"nodeType":"134","messageId":"135","endLine":10,"endColumn":33},{"ruleId":"132","severity":1,"message":"151","line":10,"column":12,"nodeType":"134","messageId":"135","endLine":10,"endColumn":28},{"ruleId":"132","severity":1,"message":"152","line":10,"column":30,"nodeType":"134","messageId":"135","endLine":10,"endColumn":49},{"ruleId":"132","severity":1,"message":"146","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":27},{"ruleId":"132","severity":1,"message":"153","line":6,"column":9,"nodeType":"134","messageId":"135","endLine":6,"endColumn":20},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","no-native-reassign",["154"],"no-negated-in-lhs",["155"],["154"],["155"],"'signOut' is defined but never used.","'setCurrentUser' is assigned a value but never used.","'signInWithRedirect' is defined but never used.","'firebaseApp' is assigned a value but never used.","'useContext' is defined but never used.","'createUserDocumentFromAuth' is defined but never used.","'user' is assigned a value but never used.","'signOutUser' is defined but never used.","'setProducts' is assigned a value but never used.","'selectedProducts' is assigned a value but never used.","'setSelectedProducts' is assigned a value but never used.","'CartContext' is defined but never used.","no-global-assign","no-unsafe-negation"]