{"ast":null,"code":"var _jsxFileName = \"/Users/Bronko/Desktop/capstone/theShop/src/context/user.context.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext } from \"react\"; // the actual value we want to access\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({\n  currentUser: null,\n  setCurrentUser: () => null\n}); // provider is the actual component\n// the provider allows any of its child components to access the state inside of its useState\n\nexport const UserProider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState(null);\n  const value = {\n    currentUser,\n    setCurrentUser\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserProider, \"D3+eUn/eYbOcEwoCOjOk5Grmif4=\");\n\n_c = UserProider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProider\");","map":{"version":3,"sources":["/Users/Bronko/Desktop/capstone/theShop/src/context/user.context.jsx"],"names":["React","useState","createContext","UserContext","currentUser","setCurrentUser","UserProider","children","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,aAAzB,QAA6C,OAA7C,C,CAEA;;;AACA,OAAO,MAAMC,WAAW,gBAAGD,aAAa,CAAC;AACrCE,EAAAA,WAAW,EAAE,IADwB;AAErCC,EAAAA,cAAc,EAAE,MAAM;AAFe,CAAD,CAAjC,C,CAMP;AACA;;AACA,OAAO,MAAMC,WAAW,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACvC,QAAM,CAACH,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAMO,KAAK,GAAG;AAAEJ,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAd;AAEA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEG,KAA7B;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CATM;;GAAMD,W;;KAAAA,W","sourcesContent":["import React, {useState, createContext} from \"react\";\n\n// the actual value we want to access\nexport const UserContext = createContext({\n    currentUser: null,\n    setCurrentUser: () => null,\n});\n\n\n// provider is the actual component\n// the provider allows any of its child components to access the state inside of its useState\nexport const UserProider = ({children}) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const value = { currentUser, setCurrentUser };\n\n    return (\n        <UserContext.provider value={value}> \n            {children}\n        </UserContext.provider>\n        )\n};"]},"metadata":{},"sourceType":"module"}