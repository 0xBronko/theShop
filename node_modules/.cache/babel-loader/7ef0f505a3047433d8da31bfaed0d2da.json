{"ast":null,"code":"var _jsxFileName = \"/Users/Bronko/Desktop/capstone/theShop/src/context/products.context.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from \"react\"; // import SHOP_DATA from \"../shop-data.js\";\n\nimport { getCategoriesAndDocuments } from \"../utils/firebase/firebase.utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CategoriesContext = /*#__PURE__*/createContext({\n  categoriesMap: []\n});\nexport const PrductsProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [products, setProducts] = useState([]); // useEffect(() => {                                            // nur einmal gefeuert, weil die Daten ja nur einmal hochgeladen werden sollen\n  //     addCollectionAndDocuments(\"categories\", SHOP_DATA);\n  // }, []);\n\n  useEffect(() => {\n    const getCategoriesMap = async () => {\n      const categoryMap = await getCategoriesAndDocuments();\n      console.log(categoryMap);\n    };\n\n    getCategoriesMap();\n  }, []);\n  const value = {\n    products\n  };\n  return /*#__PURE__*/_jsxDEV(CategoriesContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PrductsProvider, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n\n_c = PrductsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrductsProvider\");","map":{"version":3,"sources":["/Users/Bronko/Desktop/capstone/theShop/src/context/products.context.jsx"],"names":["React","createContext","useEffect","useState","getCategoriesAndDocuments","CategoriesContext","categoriesMap","PrductsProvider","children","products","setProducts","getCategoriesMap","categoryMap","console","log","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,SAA9B,EAAyCC,QAAzC,QAAwD,OAAxD,C,CAEA;;AAEA,SAAQC,yBAAR,QAAwC,kCAAxC;;AAEA,OAAO,MAAMC,iBAAiB,gBAAGJ,aAAa,CAAC;AAC3CK,EAAAA,aAAa,EAAE;AAD4B,CAAD,CAAvC;AAIP,OAAO,MAAMC,eAAe,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAC3C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC,CAD2C,CAE3C;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,gBAAgB,GAAG,YAAY;AACjC,YAAMC,WAAW,GAAG,MAAMR,yBAAyB,EAAnD;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACH,KAHD;;AAIAD,IAAAA,gBAAgB;AACnB,GANQ,EAMN,EANM,CAAT;AAQA,QAAMI,KAAK,GAAG;AAACN,IAAAA;AAAD,GAAd;AAEA,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAEM,KAAnC;AAAA,cACKP;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CArBM;;GAAMD,e;;KAAAA,e","sourcesContent":["import React, {createContext, useEffect, useState} from \"react\";\n\n// import SHOP_DATA from \"../shop-data.js\";\n\nimport {getCategoriesAndDocuments} from \"../utils/firebase/firebase.utils\";\n\nexport const CategoriesContext = createContext({\n    categoriesMap: [],\n});\n\nexport const PrductsProvider = ({children}) => {\n    const [products, setProducts] = useState([]);\n    // useEffect(() => {                                            // nur einmal gefeuert, weil die Daten ja nur einmal hochgeladen werden sollen\n    //     addCollectionAndDocuments(\"categories\", SHOP_DATA);\n    // }, []);\n\n    useEffect(() => {\n        const getCategoriesMap = async () => {\n            const categoryMap = await getCategoriesAndDocuments();\n            console.log(categoryMap);\n        }\n        getCategoriesMap();\n    }, [])\n    \n    const value = {products};\n\n    return (\n        <CategoriesContext.Provider value={value}> \n            {children}\n        </CategoriesContext.Provider>\n    )\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}