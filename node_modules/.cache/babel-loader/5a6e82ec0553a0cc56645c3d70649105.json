{"ast":null,"code":"var _jsxFileName = \"/Users/Bronko/Desktop/capstone/theShop/src/routes/navigation/navigation.routes.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Link, Outlet } from \"react-router-dom\";\nimport { ReactComponent as CrwnLogo } from \"../../assets/crown.svg\";\nimport { UserContext } from \"../../context/user.context\";\nimport { signOutUser } from \"../../utils/firebase/firebase.utils\";\nimport \"./navigation.styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Navigation = () => {\n  _s();\n\n  const {\n    currentUser,\n    setCurrentUser\n  } = useContext(UserContext); // hier extrahieren wir den aktuellen User aus dem context\n  // console.log(currentUser);                           // immer, wenn sich der user state nun ändert, wird auch diese component gerendert\n\n  const signOutHandler = async () => {\n    await signOutUser();\n    setCurrentUser(null); // damit ist der currentUser wieder im context auf null gesetzt\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"logo-container\",\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(CrwnLogo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-links-container\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: \"nav-link\",\n          to: \"/shop\",\n          children: \"SHOP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), currentUser ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nav-link\",\n          onClick: signOutHandler,\n          children: \"SIGN OUT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 40\n        }, this) : /*#__PURE__*/_jsxDEV(Link, {\n          className: \"nav-link\",\n          to: \"/auth\",\n          children: \"SIGN IN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Navigation, \"aZFnI02Yhczl145fyo4l82eQRY8=\");\n\n_c = Navigation;\nexport default Navigation; // jsx mit current user = when there is a current user -> use a different link, when current user does not exists, render\n// the sign in link\n// SignOut= wenn man hier einfach nur die signOut Methode importiert und ausführt, muss man den status auch an den context übergeben,\n// damit er immer weiß ob user gerade eingeloggt ist oder nicht --> deswegen signouthandler\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["/Users/Bronko/Desktop/capstone/theShop/src/routes/navigation/navigation.routes.jsx"],"names":["React","useContext","Link","Outlet","ReactComponent","CrwnLogo","UserContext","signOutUser","Navigation","currentUser","setCurrentUser","signOutHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,kBAA7B;AACA,SAASC,cAAc,IAAIC,QAA3B,QAA2C,wBAA3C;AAEA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,SAASC,WAAT,QAA4B,qCAA5B;AAEA,OAAO,0BAAP;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCT,UAAU,CAACK,WAAD,CAAlD,CADqB,CAC+C;AACpE;;AAEA,QAAMK,cAAc,GAAG,YAAY;AAC/B,UAAMJ,WAAW,EAAjB;AACAG,IAAAA,cAAc,CAAC,IAAD,CAAd,CAF+B,CAET;AACzB,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BAEI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAiC,QAAA,EAAE,EAAC,GAApC;AAAA,+BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,UAAhB;AAA2B,UAAA,EAAE,EAAC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAGQD,WAAW,gBAAI;AAAM,UAAA,SAAS,EAAC,UAAhB;AAA2B,UAAA,OAAO,EAAEE,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,gBACJ,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,UAAhB;AAA2B,UAAA,EAAE,EAAC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJf;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAgBI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA,kBADJ;AAoBH,CA7BD;;GAAMH,U;;KAAAA,U;AA+BN,eAAeA,UAAf,C,CAGA;AACA;AAEA;AACA","sourcesContent":["import React, { useContext } from \"react\";\nimport { Link, Outlet } from \"react-router-dom\";\nimport { ReactComponent as CrwnLogo } from \"../../assets/crown.svg\"\n\nimport { UserContext } from \"../../context/user.context\"\n\nimport { signOutUser } from \"../../utils/firebase/firebase.utils\"\n\nimport \"./navigation.styles.scss\";\n\nconst Navigation = () => {\n    const { currentUser, setCurrentUser } = useContext(UserContext);    // hier extrahieren wir den aktuellen User aus dem context\n    // console.log(currentUser);                           // immer, wenn sich der user state nun ändert, wird auch diese component gerendert\n\n    const signOutHandler = async () => {\n        await signOutUser();\n        setCurrentUser(null); // damit ist der currentUser wieder im context auf null gesetzt\n    }\n\n    return (\n        <>\n            <div className=\"navigation\">\n\n                <Link className=\"logo-container\" to=\"/\">\n                    <CrwnLogo />\n                </Link>\n\n                <div className=\"nav-links-container\">\n                    <Link className=\"nav-link\" to=\"/shop\">SHOP</Link>\n                    {\n                        currentUser ? (<span className=\"nav-link\" onClick={signOutHandler}>SIGN OUT</span>)\n                            : (<Link className=\"nav-link\" to=\"/auth\">SIGN IN</Link>)\n                    }\n                </div>\n\n            </div>\n            <Outlet />\n        </>\n    )\n}\n\nexport default Navigation;\n\n\n// jsx mit current user = when there is a current user -> use a different link, when current user does not exists, render\n// the sign in link\n\n// SignOut= wenn man hier einfach nur die signOut Methode importiert und ausführt, muss man den status auch an den context übergeben,\n// damit er immer weiß ob user gerade eingeloggt ist oder nicht --> deswegen signouthandler"]},"metadata":{},"sourceType":"module"}