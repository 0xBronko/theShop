{"ast":null,"code":"var _jsxFileName = \"/Users/Bronko/Desktop/capstone/theShop/src/context/cart.context.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {} // selectedProducts: [],\n  // setSelectedProducts: () => null,\n\n});\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // const [selectedProducts, setSelectedProducts] = useState(null);\n  // const value = {selectedProducts, setSelectedProducts};\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const value = {\n    isCartOpen,\n    setIsCartOpen\n  }; // console.log(selectedProducts);\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"OaToEO97wOL28DMPdqKG8s5L+9A=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/Bronko/Desktop/capstone/theShop/src/context/cart.context.jsx"],"names":["React","createContext","useState","CartContext","isCartOpen","setIsCartOpen","CartProvider","children","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,CAAC;AACrCG,EAAAA,UAAU,EAAE,KADyB;AAErCC,EAAAA,aAAa,EAAE,MAAM,CAAE,CAFc,CAGrC;AACA;;AAJqC,CAAD,CAAjC;AAQP,OAAO,MAAMC,YAAY,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACxC;AACA;AACA,QAAM,CAACH,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMM,KAAK,GAAG;AAACJ,IAAAA,UAAD;AAAaC,IAAAA;AAAb,GAAd,CAJwC,CAMxC;;AACA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEG,KAA7B;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAbM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const CartContext = createContext({\n    isCartOpen: false,\n    setIsCartOpen: () => {},\n    // selectedProducts: [],\n    // setSelectedProducts: () => null,\n});\n\n\nexport const CartProvider = ({children}) => {\n    // const [selectedProducts, setSelectedProducts] = useState(null);\n    // const value = {selectedProducts, setSelectedProducts};\n    const [isCartOpen, setIsCartOpen] = useState(false);\n    const value = {isCartOpen, setIsCartOpen}\n    \n    // console.log(selectedProducts);\n    return(\n        <CartContext.Provider value={value}>\n            {children}\n        </CartContext.Provider>\n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}