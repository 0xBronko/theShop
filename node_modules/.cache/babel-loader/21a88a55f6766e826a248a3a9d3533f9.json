{"ast":null,"code":"var _jsxFileName = \"/Users/Bronko/Desktop/capstone/theShop/src/context/cart.context.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addCartItem = (cartItems, productToAdd) => {// find if cartItems contains productstoadd\n  // if found, increment quantity\n  // return new array with modified cartitems/ new cart item\n};\n\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {} //also nicht den state setzen sondern addieren(das war mein Problem) -> nicht über useState\n  // selectedProducts: [],\n  // setSelectedProducts: () => null,\n\n});\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // const [selectedProducts, setSelectedProducts] = useState(null);\n  // const value = {selectedProducts, setSelectedProducts};\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen\n  }; // console.log(selectedProducts);\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"X7m0wQJ+zlrOgjCUh5u2IGGBLdE=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/Bronko/Desktop/capstone/theShop/src/context/cart.context.jsx"],"names":["React","createContext","useState","addCartItem","cartItems","productToAdd","CartContext","isCartOpen","setIsCartOpen","addItemToCart","CartProvider","children","setCartItems","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;;;AAGA,MAAMC,WAAW,GAAG,CAACC,SAAD,EAAYC,YAAZ,KAA6B,CAC7C;AAEA;AAEA;AACH,CAND;;AASA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC;AACrCM,EAAAA,UAAU,EAAE,KADyB;AAErCC,EAAAA,aAAa,EAAE,MAAM,CAAE,CAFc;AAGrCJ,EAAAA,SAAS,EAAE,EAH0B;AAIrCK,EAAAA,aAAa,EAAE,MAAM,CAAE,CAJc,CAIR;AAC7B;AACA;;AANqC,CAAD,CAAjC;AAUP,OAAO,MAAMC,YAAY,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACxC;AACA;AACA,QAAM,CAACJ,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACE,SAAD,EAAYQ,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMO,aAAa,GAAIJ,YAAD,IAAkB;AACpCO,IAAAA,YAAY,CAACT,WAAW,CAACC,SAAD,EAAYC,YAAZ,CAAZ,CAAZ;AACH,GAFD;;AAIA,QAAMQ,KAAK,GAAG;AAACN,IAAAA,UAAD;AAAaC,IAAAA;AAAb,GAAd,CAVwC,CAYxC;;AACA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEK,KAA7B;AAAA,cACKF;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAnBM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import React, { createContext, useState } from \"react\";\n\n\nconst addCartItem = (cartItems, productToAdd) => {\n    // find if cartItems contains productstoadd\n\n    // if found, increment quantity\n\n    // return new array with modified cartitems/ new cart item\n}\n\n\nexport const CartContext = createContext({\n    isCartOpen: false,\n    setIsCartOpen: () => {},\n    cartItems: [],\n    addItemToCart: () => {}      //also nicht den state setzen sondern addieren(das war mein Problem) -> nicht über useState\n    // selectedProducts: [],\n    // setSelectedProducts: () => null,\n});\n\n\nexport const CartProvider = ({children}) => {\n    // const [selectedProducts, setSelectedProducts] = useState(null);\n    // const value = {selectedProducts, setSelectedProducts};\n    const [isCartOpen, setIsCartOpen] = useState(false);\n    const [cartItems, setCartItems] = useState([]);\n\n    const addItemToCart = (productToAdd) => {\n        setCartItems(addCartItem(cartItems, productToAdd));\n    }\n\n    const value = {isCartOpen, setIsCartOpen}\n    \n    // console.log(selectedProducts);\n    return(\n        <CartContext.Provider value={value}>\n            {children}\n        </CartContext.Provider>\n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}