{"ast":null,"code":"var _jsxFileName = \"/Users/Bronko/Desktop/capstone/theShop/src/components/log-in/log-in-form.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { signInWithGooglePopup, createUserDocumentFromAuth } from \"../../utils/firebase/firebase.utils\";\nimport Button from \"../button/button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport \"./log-in-form.styles.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFormFields = {\n  mail: \"\",\n  password: \"\"\n};\n\nconst LogInForm = () => {\n  _s();\n\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const {\n    mail,\n    password\n  } = formFields;\n\n  const resetFormFields = () => {\n    setFormFields(defaultFormFields);\n  };\n\n  const signInWithGoogle = async () => {\n    const {\n      user\n    } = await signInWithGooglePopup(); // hier die user daten aus der response destructuren\n\n    await createUserDocumentFromAuth(user);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      resetFormFields();\n    } catch (error) {}\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormFields({ ...formFields,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Already have an account?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Melde dich mit deiner Email und Passwort an\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"E-Mail\",\n        required: true,\n        type: \"mail\",\n        name: \"mail\",\n        onChange: handleChange,\n        value: mail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Passwort\",\n        required: true,\n        type: \"password\",\n        name: \"password\",\n        onChange: handleChange,\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Anmelden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          buttonType: \"google\",\n          onClick: signInWithGoogle,\n          children: \"Google Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LogInForm, \"BSTP5B8VO6H/Fwu712VTuD9hH54=\");\n\n_c = LogInForm;\nexport default LogInForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogInForm\");","map":{"version":3,"sources":["/Users/Bronko/Desktop/capstone/theShop/src/components/log-in/log-in-form.component.jsx"],"names":["React","useState","signInWithGooglePopup","createUserDocumentFromAuth","Button","FormInput","defaultFormFields","mail","password","LogInForm","formFields","setFormFields","resetFormFields","signInWithGoogle","user","handleSubmit","event","preventDefault","error","handleChange","name","value","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,qBAAT,EAAgCC,0BAAhC,QAAkE,qCAAlE;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AAEA,OAAO,2BAAP;;AAGA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,IAAI,EAAE,EADgB;AAEtBC,EAAAA,QAAQ,EAAE;AAFY,CAA1B;;AAOA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAACK,iBAAD,CAA5C;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBE,UAA3B;;AAGA,QAAME,eAAe,GAAG,MAAM;AAC1BD,IAAAA,aAAa,CAACL,iBAAD,CAAb;AACH,GAFD;;AAIA,QAAMO,gBAAgB,GAAG,YAAY;AACjC,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,qBAAqB,EAA5C,CADiC,CACiB;;AAClD,UAAMC,0BAA0B,CAACW,IAAD,CAAhC;AACH,GAHD;;AAMA,QAAMC,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAClCA,IAAAA,KAAK,CAACC,cAAN;;AAGA,QAAI;AAEAL,MAAAA,eAAe;AAClB,KAHD,CAGE,OAAMM,KAAN,EAAa,CAAE;AAChB,GARL;;AAWA,QAAMC,YAAY,GAAIH,KAAD,IAAW;AAC5B,UAAM;AAAEI,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBL,KAAK,CAACM,MAA9B;AAEAX,IAAAA,aAAa,CAAC,EAAC,GAAGD,UAAJ;AAAe,OAACU,IAAD,GAAQC;AAAvB,KAAD,CAAb;AACH,GAJD;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFL,eAGI;AAAM,MAAA,QAAQ,EAAEN,YAAhB;AAAA,8BAEI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE,QAAlB;AAA4B,QAAA,QAAQ,MAApC;AAAqC,QAAA,IAAI,EAAC,MAA1C;AAAiD,QAAA,IAAI,EAAC,MAAtD;AAA6D,QAAA,QAAQ,EAAEI,YAAvE;AAAqF,QAAA,KAAK,EAAEZ;AAA5F;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE,UAAlB;AAA8B,QAAA,QAAQ,MAAtC;AAAuC,QAAA,IAAI,EAAC,UAA5C;AAAuD,QAAA,IAAI,EAAC,UAA5D;AAAuE,QAAA,QAAQ,EAAEY,YAAjF;AAA+F,QAAA,KAAK,EAAEX;AAAtG;AAAA;AAAA;AAAA;AAAA,cAHJ,eAKI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,UAAU,EAAE,QAApB;AAA8B,UAAA,OAAO,EAAEK,gBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAlDD;;GAAMJ,S;;KAAAA,S;AAoDN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport { signInWithGooglePopup, createUserDocumentFromAuth } from \"../../utils/firebase/firebase.utils\";\nimport Button from \"../button/button.component\";\nimport FormInput from \"../form-input/form-input.component\";\n\nimport \"./log-in-form.styles.scss\";\n\n\nconst defaultFormFields = {\n    mail: \"\",\n    password: \"\"\n};\n\n\n\nconst LogInForm = () => {\n    const [formFields, setFormFields] = useState(defaultFormFields);\n    const { mail, password } = formFields;  \n\n\n    const resetFormFields = () => {\n        setFormFields(defaultFormFields);\n    };\n\n    const signInWithGoogle = async () => {\n        const { user } = await signInWithGooglePopup();   // hier die user daten aus der response destructuren\n        await createUserDocumentFromAuth(user);\n    };\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n\n        try {\n\n            resetFormFields()\n        } catch(error) {}\n        };\n    \n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormFields({...formFields,[name]: value})                                  \n    }                                       \n    \n    \n\n    return (\n        <div className=\"sign-up-container\">\n            <h2>Already have an account?</h2>\n             <span>Melde dich mit deiner Email und Passwort an</span>\n            <form onSubmit={handleSubmit}>\n               \n                <FormInput label={\"E-Mail\"} required type=\"mail\" name=\"mail\" onChange={handleChange} value={mail} />\n                <FormInput label={\"Passwort\"} required type=\"password\" name=\"password\" onChange={handleChange} value={password} />\n               \n                <div className=\"buttons-container\">\n                    <Button type=\"submit\" >Anmelden</Button>\n                    <Button buttonType={\"google\"} onClick={signInWithGoogle} >Google Sign In</Button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default LogInForm;"]},"metadata":{},"sourceType":"module"}